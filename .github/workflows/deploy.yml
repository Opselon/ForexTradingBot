name: '[PROD] Build and Push-Deploy ForexTradingBot'

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  # JOB 1: Build the .NET 9 Application
  build:
    name: 'âœ… 1. Build .NET 9 Application'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: 'Setup .NET 9 Preview SDK'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          dotnet-quality: 'preview'

      - name: Publish WebAPI Project
        run: dotnet publish ./WebAPI/WebAPI.csproj --configuration Release --output ./publish
      
      - name: Zip Release Artifact
        run: zip -r release.zip ./publish
        
      - uses: actions/upload-artifact@v4
        with:
          name: forex-bot-release
          path: release.zip

  # JOB 2: Deploy to your Windows Server
  deploy:
    name: 'ðŸš¢ 2. Deploy to Windows VPS'
    needs: build
    runs-on: ubuntu-latest

    env:
      REMOTE_DEPLOY_PATH: "C:\\Apps\\ForexTradingBot"
      REMOTE_TEMP_PATH: "C:\\Apps\\Temp"

    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: forex-bot-release

    - name: Upload Release Package to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ${{ secrets.PROD_SERVER_USERNAME }}
        password: ${{ secrets.PROD_SERVER_PASSWORD }}
        source: "release.zip"
        target: "${{ env.REMOTE_TEMP_PATH }}"
        strip_components: 1

    - name: Execute Deployment Script on Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ${{ secrets.PROD_SERVER_USERNAME }}
        password: ${{ secrets.PROD_SERVER_PASSWORD }}
        # âœ… FIX: Removed all comment lines and corrected the syntax
        script: |
          Write-Host "--- Starting Remote Deployment on Server ---"

          Write-Host "[Step 1/5] Stopping any running WebAPI.exe process..."
          Stop-Process -Name "WebAPI" -Force -ErrorAction SilentlyContinue
          Start-Sleep -Seconds 3
          
          Write-Host "[Step 2/5] Cleaning deployment directory (preserving Session folder)..."
          if (-not (Test-Path "${{ env.REMOTE_DEPLOY_PATH }}")) { New-Item -Path "${{ env.REMOTE_DEPLOY_PATH }}" -ItemType Directory }
          Get-ChildItem -Path "${{ env.REMOTE_DEPLOY_PATH }}" -Exclude "Session" | Remove-Item -Recurse -Force
          
          Write-Host "[Step 3/5] Unpacking new application version..."
          Expand-Archive -Path "${{ env.REMOTE_TEMP_PATH }}\\release.zip" -DestinationPath "${{ env.REMOTE_DEPLOY_PATH }}" -Force
          Remove-Item -Path "${{ env.REMOTE_TEMP_PATH }}\\release.zip" -Force

          Write-Host "[Step 4/5] Injecting production secrets..."
          $appSettingsPath = "${{ env.REMOTE_DEPLOY_PATH }}\\appsettings.Production.json"
          # The closing brace '}' was removed from the end of the line below, fixing the syntax error.
          $content = (Get-Content $appSettingsPath -Raw) -replace '#{ConnectionString}#', '${{ secrets.PROD_CONNECTION_STRING }}' `
               -replace '#{TelegramBotToken}#', '${{ secrets.PROD_TELEGRAM_BOT_TOKEN }}' `
               -replace '#{TelegramApiId}#', '${{ secrets.TELEGRAM_API_ID }}' `
               -replace '#{TelegramApiHash}#', '${{ secrets.TELEGRAM_API_HASH }}' `
               -replace '#{TelegramPhoneNumber}#', '${{ secrets.PROD_TELEGRAM_PHONE_NUMBER }}' `
               -replace '#{CryptoPayApiToken}#', '${{ secrets.PROD_CRYPTOPAY_API_TOKEN }}'
          Set-Content -Path $appSettingsPath -Value $content
          
          Write-Host "[Step 5/5] Starting new WebAPI.exe process..."
          Start-Process -FilePath "${{ env.REMOTE_DEPLOY_PATH }}\\WebAPI.exe"
          
          Write-Host "--- Deployment Successful ---"