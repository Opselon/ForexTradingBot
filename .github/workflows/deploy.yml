# ====================================================================================
# FINAL GUARANTEED v4: Wrapper Script Method - NO COMMENTS
# This version removes all comments from the ssh-action script block, which was
# the root cause of the recurring 'not recognized' error on CMD.exe.
# ====================================================================================

name: '🚀 [PROD] Deploy ForexTradingBot'

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: production-deploy
  cancel-in-progress: true

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: './WebAPI/WebAPI.csproj'
  REMOTE_DEPLOY_PATH: 'C:\Apps\ForexTradingBot'
  REMOTE_TEMP_PATH: 'C:\Apps\Temp'

jobs:
  build:
    name: '✅ 1. Build & Package'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: '⚙️ Setup .NET SDK'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: '📦 Publish Self-Contained App'
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 -o ./publish --self-contained true
      - name: '🗜️ Create ZIP Archive'
        run: cd ./publish && zip -r ../release.zip .
      - name: '📤 Upload Release Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: forex-bot-release-package
          path: release.zip
          retention-days: 1

  deploy:
    name: '🚢 2. Deploy to Production VPS'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: '📥 Download Release Artifact'
        uses: actions/download-artifact@v4
        with:
          name: forex-bot-release-package

      - name: '📤 Upload Release ZIP to Server'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          password: ${{ secrets.PROD_SERVER_PASSWORD }}
          source: "release.zip"
          target: "${{ env.REMOTE_TEMP_PATH }}"
      
      - name: '▶️ Execute Remote Deployment'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          password: ${{ secrets.PROD_SERVER_PASSWORD }}
          # This script block contains NO comments and only CMD-compatible commands.
          script: |
            taskkill /IM WebAPI.exe /F 2>nul || echo No process to kill.
            
            powershell -Command "if (Test-Path '${{ env.REMOTE_DEPLOY_PATH }}') { Get-ChildItem -Path '${{ env.REMOTE_DEPLOY_PATH }}' -Exclude 'Session' | Remove-Item -Recurse -Force }"
            
            powershell -Command "Expand-Archive -Path '${{ env.REMOTE_TEMP_PATH }}\release.zip' -DestinationPath '${{ env.REMOTE_DEPLOY_PATH }}' -Force"
            
            (
              echo @echo off
              echo set ASPNETCORE_ENVIRONMENT=Production
              echo set ConnectionStrings__DefaultConnection=${{ secrets.PROD_CONNECTION_STRING }}
              echo set DatabaseSettings__DatabaseProvider=SqlServer
              echo set TelegramPanel__BotToken=${{ secrets.PROD_TELEGRAM_BOT_TOKEN }}
              echo set TelegramUserApi__ApiId=${{ secrets.TELEGRAM_API_ID }}
              echo set TelegramUserApi__ApiHash=${{ secrets.TELEGRAM_API_HASH }}
              echo set TelegramUserApi__PhoneNumber=${{ secrets.PROD_TELEGRAM_PHONE_NUMBER }}
              echo set CryptoPay__ApiToken=${{ secrets.PROD_CRYPTOPAY_API_TOKEN }}
              echo cd /d "${{ env.REMOTE_DEPLOY_PATH }}"
              echo start "" "WebAPI.exe"
            ) > "${{ env.REMOTE_DEPLOY_PATH }}\start-app.bat"
            
            call "${{ env.REMOTE_DEPLOY_PATH }}\start-app.bat"
            
            timeout /t 5 >nul

            tasklist /FI "IMAGENAME eq WebAPI.exe" | find "WebAPI.exe" >nul
            if errorlevel 1 (
              echo ERROR: WebAPI.exe did not start successfully.
              exit /b 1
            )
            
            echo SUCCESS: WebAPI.exe is confirmed to be running.
            
            del "${{ env.REMOTE_TEMP_PATH }}\release.zip"
            del "${{ env.REMOTE_DEPLOY_PATH }}\start-app.bat"