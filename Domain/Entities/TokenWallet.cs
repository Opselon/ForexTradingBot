using System;
using System.ComponentModel.DataAnnotations.Schema; // برای ForeignKey Attribute (اختیاری)

namespace Domain.Entities
{
    /// <summary>
    /// موجودیتی برای نمایش کیف پول توکن یک کاربر در سیستم.
    /// این کلاس موجودی توکن کاربر و زمان آخرین به‌روزرسانی آن را نگهداری می‌کند.
    /// هر کاربر معمولاً یک کیف پول توکن منحصر به فرد دارد.
    /// </summary>
    public class TokenWallet
    {
        /// <summary>
        /// شناسه یکتای کیف پول توکن.
        /// به عنوان کلید اصلی (Primary Key) در پایگاه داده استفاده می‌شود.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// شناسه کاربری که این کیف پول به او تعلق دارد.
        /// این یک کلید خارجی است که به شناسه کاربر (User.Id) اشاره دارد.
        /// این فیلد برای برقراری ارتباط یک-به-یک با موجودیت User استفاده می‌شود.
        /// </summary>
        // [ForeignKey(nameof(User))] // می‌تواند برای وضوح بیشتر یا پیکربندی دقیق‌تر EF Core استفاده شود.
        public Guid UserId { get; set; }

        /// <summary>
        /// نویگیشن به موجودیت کاربر (User) که صاحب این کیف پول است.
        /// این خصوصیت توسط Entity Framework Core برای بارگذاری موجودیت مرتبط کاربر استفاده می‌شود.
        /// انتظار می‌رود `null!` نباشد زیرا هر کیف پول باید به یک کاربر معتبر مرتبط باشد.
        /// </summary>
        public User User { get; set; } = null!; // مقداردهی اولیه برای جلوگیری از هشدار nullability کامپایلر.

        /// <summary>
        /// موجودی فعلی توکن در کیف پول کاربر.
        /// این مقدار با انجام تراکنش‌های مختلف (مانند خرید توکن، استفاده از خدمات پولی) تغییر می‌کند.
        /// توصیه می‌شود که به‌روزرسانی این فیلد با دقت و با در نظر گرفتن کنترل همزمانی انجام شود.
        /// </summary>
        public decimal Balance { get; set; }

        /// <summary>
        /// تاریخ و زمان آخرین به‌روزرسانی موجودی کیف پول به وقت جهانی (UTC).
        /// برای ردیابی زمان آخرین تغییر در موجودی و اهداف ممیزی مفید است.
        /// به صورت پیش‌فرض با زمان جاری UTC در لحظه ایجاد یا به‌روزرسانی نمونه از کلاس مقداردهی می‌شود.
        /// (نکته: این مقدار باید در هر بار تغییر 'Balance' به‌روز شود.)
        /// </summary>
        public DateTime UpdatedAt { get; set; } = DateTime.UtcNow;

        // ملاحظات اضافی:
        // - ممکن است نیاز به یک فیلد 'CreatedAt' برای ثبت زمان ایجاد اولیه کیف پول باشد.
        // - اگر سیستم از چندین نوع توکن پشتیبانی می‌کند، فیلدی برای 'TokenType' یا 'CurrencyCode' لازم خواهد بود.
        // - متدهایی برای افزایش/کاهش موجودی (مانند AddTokens, DeductTokens) می‌توانند در این کلاس یا
        //   در سرویس‌های لایه Application پیاده‌سازی شوند تا از معتبر بودن عملیات اطمینان حاصل شود.

        // سازنده پیش‌فرض برای EF Core
        public TokenWallet() { }

        // سازنده برای ایجاد یک کیف پول جدید برای یک کاربر
        // public TokenWallet(Guid userId, decimal initialBalance = 0)
        // {
        //     Id = Guid.NewGuid();
        //     UserId = userId;
        //     Balance = initialBalance;
        //     UpdatedAt = DateTime.UtcNow;
        //     // User باید توسط EF Core یا از طریق سرویس‌ها بارگذاری/پیوند داده شود.
        // }
    }
}